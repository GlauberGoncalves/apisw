var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.355,1,1.566]],["body/controllers/AppController.html",[0,2.017,1,2.331,2,1.564,3,0.569,4,0.476,5,0.476,6,2.519,7,0.476,8,1.533,9,3.8,10,2.519,11,0.052,12,0.781,13,3.138,14,1.188,15,1.007,16,0.865,17,1.037,18,1.944,19,2.519,20,0.569,21,0.094,22,2.112,23,2.112,24,1.188,25,3.138,26,0.031,27,0.04,28,0.031]],["title/modules/AppModule.html",[29,1.355,30,1.566]],["body/modules/AppModule.html",[1,2.371,2,1.802,3,0.48,4,0.402,5,0.402,11,0.052,16,0.989,17,0.874,18,2.074,19,2.125,20,0.48,21,0.08,26,0.026,27,0.035,28,0.026,29,2.052,30,2.868,31,1.319,32,1.319,33,1.781,34,1.781,35,1.319,36,2.77,37,1.781,38,2.125,39,2.125,40,2.125,41,2.382,42,2.432,43,1.781,44,1.781,45,2.647,46,2.902,47,2.647,48,2.125,49,1.524,50,2.647,51,2.647]],["title/injectables/AppService.html",[18,1.18,52,1.03]],["body/injectables/AppService.html",[3,0.606,4,0.507,5,0.507,7,0.507,8,1.594,9,3.888,11,0.052,12,0.831,14,1.264,15,1.047,16,0.713,17,1.103,18,1.827,20,0.606,21,0.1,24,1.264,26,0.033,27,0.041,28,0.033,52,1.594,53,1.923,54,2.681,55,3.339,56,3.339,57,3.339]],["title/classes/Planet.html",[21,0.082,58,0.581]],["body/classes/Planet.html",[3,0.425,4,0.356,5,0.356,7,0.356,11,0.053,12,1.044,15,1.203,16,0.501,20,0.425,21,0.1,24,1.258,26,0.023,27,0.032,28,0.023,58,0.983,59,1.017,60,1.578,61,1.656,62,1.923,63,2.208,64,1.275,65,1.923,66,1.206,67,2.344,68,2.344,69,2.344,70,2.344,71,1.678,72,1.882,73,1.35,74,1.35,75,2.667,76,1.882,77,1.913,78,1.656,79,1.578,80,1.578,81,2.667,82,1.578,83,2.667,84,1.578,85,2.667,86,1.882,87,1.882,88,1.882,89,1.882,90,1.882]],["title/classes/Planet-1.html",[21,0.069,58,0.488,91,2.286]],["body/classes/Planet-1.html",[3,0.56,4,0.469,5,0.469,7,0.469,11,0.05,12,1.106,15,1.242,16,0.66,20,0.56,21,0.093,26,0.03,27,0.039,28,0.03,58,0.856,59,1.34,61,1.996,62,2.216,64,1.469,65,2.216,66,1.278,92,2.479,93,4.005,94,4.446,95,3.088,96,3.088,97,3.088,98,2.078]],["title/classes/PlanetDTO.html",[21,0.082,71,1.03]],["body/classes/PlanetDTO.html",[3,0.445,4,0.372,5,0.372,7,0.372,8,1.299,11,0.052,12,1.162,14,0.929,15,1.217,16,0.524,20,0.445,21,0.074,26,0.024,27,0.034,28,0.024,58,0.998,59,1.065,61,1.71,62,1.972,63,1.972,64,1.415,65,1.972,66,1.342,71,1.299,79,1.652,80,1.652,82,1.652,84,1.652,99,1.97,100,3.176,101,3.431,102,2.755,103,2.455,104,2.455,105,2.455,106,2.455,107,2.455,108,3.431,109,2.455,110,1.414,111,1.414,112,2.455,113,2.455,114,2.455,115,2.455,116,2.455]],["title/classes/PlanetResponse.html",[21,0.082,117,1.355]],["body/classes/PlanetResponse.html",[3,0.647,4,0.541,5,0.541,7,0.541,11,0.048,12,0.887,20,0.647,21,0.107,26,0.035,27,0.043,28,0.035,59,1.548,61,2.187,66,1.025,117,2.187,118,2.527,119,2.864,120,4.752,121,4.388,122,3.567]],["title/injectables/PlanetService.html",[52,1.03,123,1.18]],["body/injectables/PlanetService.html",[3,0.242,4,0.202,5,0.202,7,0.202,8,0.818,11,0.053,12,0.966,14,1.396,15,1.092,16,0.788,17,0.44,20,0.242,21,0.04,23,0.897,24,1.531,26,0.013,27,0.021,28,0.013,49,0.768,52,0.818,53,0.768,58,0.972,63,1.716,64,1.218,66,1.059,71,1.304,77,2.328,78,1.561,98,0.897,110,2.123,111,2.123,117,1.837,123,0.937,124,1.07,125,3.902,126,1.734,127,1.734,128,2.515,129,1.734,130,1.734,131,1.734,132,1.07,133,1.333,134,3.133,135,2.724,136,1.359,137,1.333,138,2.16,139,1.734,140,1.333,141,1.734,142,1.333,143,1.333,144,1.734,145,1.333,146,1.333,147,1.333,148,1.333,149,1.734,150,1.333,151,1.333,152,1.07,153,0.664,154,1.07,155,1.333,156,1.333,157,2.16,158,1.07,159,3.354,160,1.333,161,1.333,162,1.333,163,2.724,164,2.724,165,2.724,166,2.16,167,1.333,168,1.333,169,1.333,170,1.333,171,1.333,172,1.07,173,1.333,174,1.333,175,1.333,176,1.333,177,1.333,178,1.333,179,1.333,180,1.333]],["title/controllers/PlanetsController.html",[0,1.355,181,1.566]],["body/controllers/PlanetsController.html",[0,0.787,2,0.787,3,0.286,4,0.239,5,0.239,7,0.239,8,0.936,10,3.188,11,0.053,12,0.988,14,1.504,15,1.146,16,0.737,17,0.521,20,0.286,21,0.047,22,1.062,24,1.418,26,0.015,27,0.024,28,0.015,58,0.984,63,1.979,64,1.312,66,1.076,71,0.598,110,2.156,111,2.156,123,1.322,125,3.995,126,1.984,127,2.446,128,2.768,129,1.984,130,1.984,131,1.984,139,1.267,141,1.267,144,1.267,149,1.267,158,1.267,159,1.267,172,1.267,181,1.423,182,1.267,183,1.578,184,3.047,185,1.578,186,4.296,187,2.472,188,1.578,189,1.578,190,2.472,191,1.578,192,1.578,193,2.472,194,1.578,195,2.472,196,1.578,197,2.472,198,1.578,199,1.578,200,1.267,201,1.578,202,1.578,203,1.578,204,1.578,205,1.578,206,1.578,207,1.578,208,1.578,209,1.578,210,1.578,211,1.578,212,1.578,213,1.578,214,1.578,215,1.578]],["title/modules/PlanetsModule.html",[29,1.355,41,1.355]],["body/modules/PlanetsModule.html",[2,1.741,3,0.457,4,0.382,5,0.382,11,0.053,16,1.006,17,0.832,20,0.457,21,0.076,26,0.025,27,0.034,28,0.025,29,1.999,31,1.256,32,1.256,33,1.695,34,1.695,35,1.256,36,2.699,37,1.695,41,2.453,42,2.351,43,1.695,44,1.695,46,2.022,48,2.022,49,1.451,58,0.538,123,2.043,136,2.043,152,2.022,153,1.256,154,2.022,181,2.31,200,2.022,216,2.022,217,2.022,218,2.519,219,3.494,220,2.519,221,2.351,222,2.519,223,2.519,224,2.519]],["title/injectables/SwapiHttpService.html",[52,1.03,136,1.18]],["body/injectables/SwapiHttpService.html",[3,0.41,4,0.343,5,0.343,7,0.343,8,1.226,11,0.053,12,0.941,14,0.856,15,0.805,16,0.882,17,0.747,20,0.41,21,0.068,22,1.522,23,1.522,24,1.226,26,0.022,27,0.032,28,0.022,52,1.226,53,1.302,58,0.483,61,1.614,64,1.249,66,0.931,73,1.302,77,2.178,110,1.865,111,1.865,117,1.127,118,2.378,132,1.815,136,1.405,153,2.058,225,1.522,226,3.782,227,3.238,228,2.261,229,4.129,230,3.238,231,2.261,232,2.261,233,3.782,234,1.815,235,3.238,236,2.261,237,2.261,238,2.261,239,2.261,240,1.522,241,2.179,242,2.179,243,2.261,244,2.261,245,2.261,246,2.261,247,2.261,248,2.261,249,2.261,250,2.261]],["title/classes/TestUtil.html",[21,0.082,74,1.566]],["body/classes/TestUtil.html",[3,0.44,4,0.368,5,0.368,7,0.368,8,1.288,11,0.053,12,0.846,14,1.288,15,1.06,16,0.518,20,0.44,21,0.102,24,1.288,26,0.024,27,0.033,28,0.024,58,0.994,59,1.052,60,1.631,62,1.208,63,1.958,64,0.801,65,1.208,71,1.761,72,1.946,73,1.396,74,1.958,75,3.734,76,3.42,77,1.958,78,1.695,79,1.631,80,1.631,81,2.73,82,1.631,83,2.73,84,1.631,85,2.73,86,3.42,87,1.946,88,1.946,89,1.946,90,1.946,251,2.423,252,2.423]],["title/coverage.html",[253,2.478]],["body/coverage.html",[0,1.695,1,1.396,5,0.368,6,1.946,11,0.051,18,1.052,21,0.135,26,0.024,27,0.033,28,0.024,35,1.208,52,1.488,54,1.946,58,0.727,60,2.288,66,0.697,71,0.918,74,1.396,78,1.208,92,1.946,99,1.946,117,1.208,118,2.453,119,1.946,123,1.052,124,1.946,136,1.052,153,1.958,181,1.396,182,1.946,221,1.631,225,2.644,240,1.631,241,3.497,242,1.631,253,1.631,254,2.423,255,2.423,256,2.423,257,3.929,258,2.423,259,2.423,260,1.946,261,2.423,262,4.26,263,3.401,264,1.946,265,3.929,266,2.423,267,3.401,268,2.423,269,2.423]],["title/dependencies.html",[32,1.626,270,2.286]],["body/dependencies.html",[11,0.053,17,1.129,26,0.033,27,0.042,28,0.033,32,1.704,49,1.969,98,2.3,271,3.418,272,3.418,273,3.418,274,4.662,275,3.418,276,3.418,277,3.418,278,3.418,279,3.418,280,3.418,281,3.418,282,3.418,283,3.418,284,3.418,285,3.418,286,3.418]],["title/miscellaneous/functions.html",[287,1.316,288,2.619]],["body/miscellaneous/functions.html",[7,0.601,11,0.046,26,0.039,27,0.046,28,0.039,35,2.478,260,3.179,287,2.281,288,3.179,289,3.96]],["title/index.html",[7,0.347,290,2.286,291,2.286]],["body/index.html",[4,0.376,11,0.051,26,0.024,27,0.034,28,0.024,253,1.666,292,2.476,293,2.476,294,3.452,295,2.476,296,2.476,297,2.476,298,2.476,299,2.476,300,2.476,301,2.476,302,2.476,303,2.476,304,2.476,305,3.974,306,2.476,307,2.476,308,2.476,309,2.476,310,4.805,311,2.476,312,2.476,313,2.476,314,4.683,315,2.476,316,2.476,317,3.452,318,2.476,319,2.476,320,2.476,321,2.476,322,3.452,323,3.452,324,2.476,325,2.476,326,2.476,327,3.452,328,3.452,329,2.476,330,2.476,331,2.476,332,2.476,333,2.476,334,1.987,335,2.476,336,2.476,337,2.476,338,2.476,339,2.476,340,2.476,341,2.476,342,2.476,343,2.476,344,2.476,345,2.476,346,2.476,347,2.476,348,2.476,349,2.476,350,2.476,351,2.476,352,2.476]],["title/modules.html",[31,1.835]],["body/modules.html",[11,0.045,26,0.038,27,0.045,28,0.038,30,2.235,31,1.934,41,1.934,334,3.706,353,4.617,354,4.617,355,4.617]],["title/overview.html",[356,2.956]],["body/overview.html",[2,1.523,11,0.049,18,1.919,26,0.03,27,0.039,28,0.03,29,1.523,30,2.868,31,1.523,32,1.523,33,2.056,34,2.056,35,1.523,36,2.056,37,2.056,38,2.452,39,2.452,40,2.452,41,2.528,42,2.676,43,2.056,44,2.056,53,1.759,59,1.326,123,1.919,136,1.919,216,2.452,217,2.452,356,2.452,357,3.978,358,3.055,359,3.055]],["title/miscellaneous/variables.html",[287,1.316,360,2.619]],["body/miscellaneous/variables.html",[7,0.476,11,0.051,15,1.115,26,0.031,27,0.04,28,0.031,62,1.564,64,1.037,65,1.564,66,1.163,73,2.58,78,1.564,100,2.519,102,3.597,118,1.807,153,1.564,221,2.724,225,3.015,234,3.597,240,2.724,241,2.724,242,2.724,264,2.519,287,1.807,360,2.519,361,4.048,362,3.138,363,3.138]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/PlanetResponse.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":241,"title":{},"body":{"injectables/SwapiHttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":282,"title":{},"body":{"dependencies.html":{}}}],["0.1.2",{"_index":273,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":262,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":257,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":259,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":267,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":258,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":263,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":266,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":91,"title":{"classes/Planet-1.html":{}},"body":{}}],["2",{"_index":357,"title":{},"body":{"overview.html":{}}}],["3",{"_index":358,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":284,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":359,"title":{},"body":{"overview.html":{}}}],["5.10.6",{"_index":279,"title":{},"body":{"dependencies.html":{}}}],["6.6.3",{"_index":286,"title":{},"body":{"dependencies.html":{}}}],["7.0.0",{"_index":274,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":276,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":177,"title":{},"body":{"injectables/PlanetService.html":{}}}],["allresult",{"_index":166,"title":{},"body":{"injectables/PlanetService.html":{}}}],["amazing",{"_index":335,"title":{},"body":{"index.html":{}}}],["angular",{"_index":303,"title":{},"body":{"index.html":{}}}],["aparitions",{"_index":100,"title":{},"body":{"classes/PlanetDTO.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":312,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":300,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":30,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["array",{"_index":121,"title":{},"body":{"classes/PlanetResponse.html":{}}}],["async",{"_index":125,"title":{},"body":{"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{}}}],["author",{"_index":345,"title":{},"body":{"index.html":{}}}],["await",{"_index":159,"title":{},"body":{"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{}}}],["backers",{"_index":336,"title":{},"body":{"index.html":{}}}],["baseurl",{"_index":226,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["body",{"_index":197,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["bootstrap",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":355,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":353,"title":{},"body":{"modules.html":{}}}],["building",{"_index":295,"title":{},"body":{"index.html":{}}}],["class",{"_index":21,"title":{"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/PlanetResponse.html":{},"classes/TestUtil.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/PlanetResponse.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{},"coverage.html":{}}}],["classes",{"_index":59,"title":{},"body":{"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/PlanetResponse.html":{},"classes/TestUtil.html":{},"overview.html":{}}}],["climate",{"_index":62,"title":{},"body":{"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/TestUtil.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_planetsmodule",{"_index":216,"title":{},"body":{"modules/PlanetsModule.html":{},"overview.html":{}}}],["cluster_planetsmodule_providers",{"_index":217,"title":{},"body":{"modules/PlanetsModule.html":{},"overview.html":{}}}],["const",{"_index":77,"title":{},"body":{"classes/Planet.html":{},"injectables/PlanetService.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{}}}],["constructor",{"_index":132,"title":{},"body":{"injectables/PlanetService.html":{},"injectables/SwapiHttpService.html":{}}}],["constructor(@injectmodel('planet",{"_index":156,"title":{},"body":{"injectables/PlanetService.html":{}}}],["constructor(httpservice",{"_index":228,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["constructor(planetmodel",{"_index":133,"title":{},"body":{"injectables/PlanetService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/PlanetsController.html":{},"injectables/SwapiHttpService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/PlanetsController.html":{}},"body":{"controllers/AppController.html":{},"controllers/PlanetsController.html":{},"coverage.html":{}}}],["controller('planets",{"_index":203,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{},"overview.html":{}}}],["coverage",{"_index":253,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":126,"title":{},"body":{"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{}}}],["create(@body",{"_index":210,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["create(planet",{"_index":139,"title":{},"body":{"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{}}}],["createdplanet",{"_index":169,"title":{},"body":{"injectables/PlanetService.html":{}}}],["createdplanet.save",{"_index":171,"title":{},"body":{"injectables/PlanetService.html":{}}}],["declarations",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/PlanetsController.html":{}}}],["default",{"_index":73,"title":{},"body":{"classes/Planet.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/PlanetResponse.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{}}}],["delete",{"_index":127,"title":{},"body":{"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{}}}],["delete(':id",{"_index":187,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["delete(@param('id",{"_index":214,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["delete(id",{"_index":141,"title":{},"body":{"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{}}}],["dependencies",{"_index":32,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":304,"title":{},"body":{"index.html":{}}}],["development",{"_index":313,"title":{},"body":{"index.html":{}}}],["document",{"_index":94,"title":{},"body":{"classes/Planet-1.html":{}}}],["documentation",{"_index":254,"title":{},"body":{"coverage.html":{}}}],["e2e",{"_index":324,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":296,"title":{},"body":{"index.html":{}}}],["empty",{"_index":242,"title":{},"body":{"injectables/SwapiHttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["exec",{"_index":178,"title":{},"body":{"injectables/PlanetService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/PlanetResponse.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{}}}],["exports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{},"overview.html":{}}}],["express",{"_index":278,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":93,"title":{},"body":{"classes/Planet-1.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/PlanetResponse.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{},"coverage.html":{}}}],["films",{"_index":120,"title":{},"body":{"classes/PlanetResponse.html":{}}}],["fire",{"_index":83,"title":{},"body":{"classes/Planet.html":{},"classes/TestUtil.html":{}}}],["first_result",{"_index":240,"title":{},"body":{"injectables/SwapiHttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":294,"title":{},"body":{"index.html":{}}}],["function",{"_index":261,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":288,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/name/:search",{"_index":193,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["get(':id",{"_index":190,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["getall",{"_index":128,"title":{},"body":{"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{}}}],["getbyid",{"_index":129,"title":{},"body":{"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{}}}],["getbyid(@param('id",{"_index":208,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["getbyid(id",{"_index":144,"title":{},"body":{"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{}}}],["getbyname",{"_index":130,"title":{},"body":{"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{}}}],["getbyname(@param('search",{"_index":204,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["getbyname(name",{"_index":192,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["getbyname(planetname",{"_index":146,"title":{},"body":{"injectables/PlanetService.html":{}}}],["getbyname(planetname:string",{"_index":179,"title":{},"body":{"injectables/PlanetService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getnumberapparitionsbyname",{"_index":227,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["getnumberapparitionsbyname(name",{"_index":231,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["getnumberapparitionsbyname(name:string",{"_index":244,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["getting",{"_index":290,"title":{"index.html":{}},"body":{}}],["givemeavalidplanet",{"_index":76,"title":{},"body":{"classes/Planet.html":{},"classes/TestUtil.html":{}}}],["givemeavalidplanetdto",{"_index":86,"title":{},"body":{"classes/Planet.html":{},"classes/TestUtil.html":{}}}],["golevelup/nestjs",{"_index":271,"title":{},"body":{"dependencies.html":{}}}],["grow",{"_index":331,"title":{},"body":{"index.html":{}}}],["heavily",{"_index":301,"title":{},"body":{"index.html":{}}}],["hello",{"_index":56,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":342,"title":{},"body":{"index.html":{}}}],["http.service",{"_index":154,"title":{},"body":{"injectables/PlanetService.html":{},"modules/PlanetsModule.html":{}}}],["http.service.ts",{"_index":225,"title":{},"body":{"injectables/SwapiHttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["http.service.ts:13",{"_index":230,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["http.service.ts:17",{"_index":232,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["http/planet.response.ts",{"_index":119,"title":{},"body":{"classes/PlanetResponse.html":{},"coverage.html":{}}}],["http/planet.response.ts:2",{"_index":122,"title":{},"body":{"classes/PlanetResponse.html":{}}}],["http/swapi",{"_index":153,"title":{},"body":{"injectables/PlanetService.html":{},"modules/PlanetsModule.html":{},"injectables/SwapiHttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["httpmodule",{"_index":219,"title":{},"body":{"modules/PlanetsModule.html":{}}}],["https://nestjs.com",{"_index":349,"title":{},"body":{"index.html":{}}}],["https://swapi.dev/api",{"_index":235,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["httpservice",{"_index":229,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["httpservice:httpservice",{"_index":243,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["id",{"_index":63,"title":{},"body":{"classes/Planet.html":{},"classes/PlanetDTO.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"classes/TestUtil.html":{}}}],["identifier",{"_index":255,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{}}}],["imports",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/PlanetResponse.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/PlanetResponse.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{}}}],["init",{"_index":101,"title":{},"body":{"classes/PlanetDTO.html":{}}}],["init(planet",{"_index":108,"title":{},"body":{"classes/PlanetDTO.html":{}}}],["injectable",{"_index":52,"title":{"injectables/AppService.html":{},"injectables/PlanetService.html":{},"injectables/SwapiHttpService.html":{}},"body":{"injectables/AppService.html":{},"injectables/PlanetService.html":{},"injectables/SwapiHttpService.html":{},"coverage.html":{}}}],["injectables",{"_index":53,"title":{},"body":{"injectables/AppService.html":{},"injectables/PlanetService.html":{},"injectables/SwapiHttpService.html":{},"overview.html":{}}}],["injectmodel",{"_index":151,"title":{},"body":{"injectables/PlanetService.html":{}}}],["inspired",{"_index":302,"title":{},"body":{"index.html":{}}}],["installation",{"_index":309,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":311,"title":{},"body":{"index.html":{}}}],["join",{"_index":338,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":346,"title":{},"body":{"index.html":{}}}],["legend",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{},"overview.html":{}}}],["license",{"_index":352,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":328,"title":{},"body":{"index.html":{}}}],["map",{"_index":237,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["map((response:any",{"_index":247,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/PlanetResponse.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":281,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/PlanetDTO.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{}}}],["miscellaneous",{"_index":287,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":327,"title":{},"body":{"index.html":{}}}],["mode",{"_index":317,"title":{},"body":{"index.html":{}}}],["model",{"_index":134,"title":{},"body":{"injectables/PlanetService.html":{}}}],["module",{"_index":29,"title":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{},"overview.html":{}}}],["modules",{"_index":31,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":98,"title":{},"body":{"classes/Planet-1.html":{},"injectables/PlanetService.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{}}}],["mongoosemodule.forfeature([{name",{"_index":223,"title":{},"body":{"modules/PlanetsModule.html":{}}}],["mongoosemodule.forroot('mongodb://root:root@localhost:27017",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":341,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":347,"title":{},"body":{"index.html":{}}}],["name",{"_index":64,"title":{},"body":{"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{},"miscellaneous/variables.html":{}}}],["name:string",{"_index":205,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["nest",{"_index":305,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":351,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{},"injectables/SwapiHttpService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":275,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"injectables/PlanetService.html":{},"modules/PlanetsModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":277,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":78,"title":{},"body":{"classes/Planet.html":{},"injectables/PlanetService.html":{},"classes/TestUtil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":293,"title":{},"body":{"index.html":{}}}],["npm",{"_index":310,"title":{},"body":{"index.html":{}}}],["number",{"_index":102,"title":{},"body":{"classes/PlanetDTO.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":233,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["open",{"_index":329,"title":{},"body":{"index.html":{}}}],["optional",{"_index":111,"title":{},"body":{"classes/PlanetDTO.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"injectables/SwapiHttpService.html":{}}}],["out",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{},"overview.html":{}}}],["overview",{"_index":356,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":270,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":198,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["parameters",{"_index":110,"title":{},"body":{"classes/PlanetDTO.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"injectables/SwapiHttpService.html":{}}}],["pipe",{"_index":246,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["planet",{"_index":58,"title":{"classes/Planet.html":{},"classes/Planet-1.html":{}},"body":{"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{},"coverage.html":{}}}],["planet).exec",{"_index":174,"title":{},"body":{"injectables/PlanetService.html":{}}}],["planet.climate",{"_index":82,"title":{},"body":{"classes/Planet.html":{},"classes/PlanetDTO.html":{},"classes/TestUtil.html":{}}}],["planet.dto",{"_index":155,"title":{},"body":{"injectables/PlanetService.html":{}}}],["planet.films.length",{"_index":250,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["planet.id",{"_index":79,"title":{},"body":{"classes/Planet.html":{},"classes/PlanetDTO.html":{},"classes/TestUtil.html":{}}}],["planet.name",{"_index":80,"title":{},"body":{"classes/Planet.html":{},"classes/PlanetDTO.html":{},"classes/TestUtil.html":{}}}],["planet.response",{"_index":239,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["planet.terrain",{"_index":84,"title":{},"body":{"classes/Planet.html":{},"classes/PlanetDTO.html":{},"classes/TestUtil.html":{}}}],["planet:planet",{"_index":172,"title":{},"body":{"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{}}}],["planet:planetresponse",{"_index":248,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["planetdto",{"_index":71,"title":{"classes/PlanetDTO.html":{}},"body":{"classes/Planet.html":{},"classes/PlanetDTO.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"classes/TestUtil.html":{},"coverage.html":{}}}],["planetdto.climate",{"_index":89,"title":{},"body":{"classes/Planet.html":{},"classes/TestUtil.html":{}}}],["planetdto.id",{"_index":87,"title":{},"body":{"classes/Planet.html":{},"classes/TestUtil.html":{}}}],["planetdto.name",{"_index":88,"title":{},"body":{"classes/Planet.html":{},"classes/TestUtil.html":{}}}],["planetdto.terrain",{"_index":90,"title":{},"body":{"classes/Planet.html":{},"classes/TestUtil.html":{}}}],["planetmodel",{"_index":138,"title":{},"body":{"injectables/PlanetService.html":{}}}],["planetname",{"_index":148,"title":{},"body":{"injectables/PlanetService.html":{}}}],["planetresponse",{"_index":117,"title":{"classes/PlanetResponse.html":{}},"body":{"classes/PlanetResponse.html":{},"injectables/PlanetService.html":{},"injectables/SwapiHttpService.html":{},"coverage.html":{}}}],["planetresponse.aparitions",{"_index":164,"title":{},"body":{"injectables/PlanetService.html":{}}}],["planetresponse.init(planet",{"_index":163,"title":{},"body":{"injectables/PlanetService.html":{}}}],["planets",{"_index":158,"title":{},"body":{"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{}}}],["planets.controller",{"_index":220,"title":{},"body":{"modules/PlanetsModule.html":{}}}],["planets.map(async",{"_index":162,"title":{},"body":{"injectables/PlanetService.html":{}}}],["planets/planets.module",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["planets/shared/planet.dto",{"_index":72,"title":{},"body":{"classes/Planet.html":{},"classes/TestUtil.html":{}}}],["planetschema",{"_index":221,"title":{},"body":{"modules/PlanetsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["planetscontroller",{"_index":181,"title":{"controllers/PlanetsController.html":{}},"body":{"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{},"coverage.html":{}}}],["planetsdto",{"_index":161,"title":{},"body":{"injectables/PlanetService.html":{}}}],["planetservice",{"_index":123,"title":{"injectables/PlanetService.html":{}},"body":{"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{},"coverage.html":{},"overview.html":{}}}],["planetsmodule",{"_index":41,"title":{"modules/PlanetsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{},"modules.html":{},"overview.html":{}}}],["please",{"_index":339,"title":{},"body":{"index.html":{}}}],["post",{"_index":184,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["prefix",{"_index":183,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["private",{"_index":157,"title":{},"body":{"injectables/PlanetService.html":{}}}],["production",{"_index":319,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":292,"title":{},"body":{"index.html":{}}}],["project",{"_index":330,"title":{},"body":{"index.html":{}}}],["promise",{"_index":186,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["promise.all(planetsdto",{"_index":167,"title":{},"body":{"injectables/PlanetService.html":{}}}],["properties",{"_index":61,"title":{},"body":{"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/PlanetResponse.html":{},"injectables/SwapiHttpService.html":{}}}],["providers",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{},"overview.html":{}}}],["put",{"_index":199,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["put(':id",{"_index":195,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["read",{"_index":340,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/PlanetService.html":{},"injectables/SwapiHttpService.html":{}}}],["reflect",{"_index":280,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":308,"title":{},"body":{"index.html":{}}}],["reset",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{},"overview.html":{}}}],["response.data.results[first_result",{"_index":249,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["result",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/PlanetResponse.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/PlanetResponse.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Planet.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/PlanetDTO.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{}}}],["rimraf",{"_index":283,"title":{},"body":{"dependencies.html":{}}}],["rock",{"_index":85,"title":{},"body":{"classes/Planet.html":{},"classes/TestUtil.html":{}}}],["run",{"_index":314,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":285,"title":{},"body":{"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":236,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["rxjs/operators",{"_index":238,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["scalable",{"_index":297,"title":{},"body":{"index.html":{}}}],["schema",{"_index":224,"title":{},"body":{"modules/PlanetsModule.html":{}}}],["schemas/planet.schema",{"_index":222,"title":{},"body":{"modules/PlanetsModule.html":{}}}],["server",{"_index":298,"title":{},"body":{"index.html":{}}}],["shared/planet",{"_index":201,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["shared/planet.dto",{"_index":202,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["shared/planet.service",{"_index":200,"title":{},"body":{"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{}}}],["side",{"_index":299,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/PlanetResponse.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"modules/PlanetsModule.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{},"index.html":{}}}],["sponsors",{"_index":333,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":289,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../planet.schema.ts",{"_index":362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swapi",{"_index":361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":54,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":55,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/test/testutil.ts",{"_index":60,"title":{},"body":{"classes/Planet.html":{},"classes/TestUtil.html":{},"coverage.html":{}}}],["src/common/test/testutil.ts:13",{"_index":251,"title":{},"body":{"classes/TestUtil.html":{}}}],["src/common/test/testutil.ts:22",{"_index":252,"title":{},"body":{"classes/TestUtil.html":{}}}],["src/common/test/testutil.ts:6",{"_index":68,"title":{},"body":{"classes/Planet.html":{}}}],["src/common/test/testutil.ts:7",{"_index":69,"title":{},"body":{"classes/Planet.html":{}}}],["src/common/test/testutil.ts:8",{"_index":67,"title":{},"body":{"classes/Planet.html":{}}}],["src/common/test/testutil.ts:9",{"_index":70,"title":{},"body":{"classes/Planet.html":{}}}],["src/main.ts",{"_index":260,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/planets/planets.controller.ts",{"_index":182,"title":{},"body":{"controllers/PlanetsController.html":{},"coverage.html":{}}}],["src/planets/planets.controller.ts:14",{"_index":194,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["src/planets/planets.controller.ts:19",{"_index":189,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["src/planets/planets.controller.ts:24",{"_index":191,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["src/planets/planets.controller.ts:29",{"_index":185,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["src/planets/planets.controller.ts:34",{"_index":196,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["src/planets/planets.controller.ts:39",{"_index":188,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["src/planets/planets.module.ts",{"_index":218,"title":{},"body":{"modules/PlanetsModule.html":{}}}],["src/planets/schemas/planet.schema.ts",{"_index":264,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/planets/shared/planet.dto.ts",{"_index":99,"title":{},"body":{"classes/PlanetDTO.html":{},"coverage.html":{}}}],["src/planets/shared/planet.dto.ts:10",{"_index":109,"title":{},"body":{"classes/PlanetDTO.html":{}}}],["src/planets/shared/planet.dto.ts:4",{"_index":105,"title":{},"body":{"classes/PlanetDTO.html":{}}}],["src/planets/shared/planet.dto.ts:5",{"_index":106,"title":{},"body":{"classes/PlanetDTO.html":{}}}],["src/planets/shared/planet.dto.ts:6",{"_index":104,"title":{},"body":{"classes/PlanetDTO.html":{}}}],["src/planets/shared/planet.dto.ts:7",{"_index":107,"title":{},"body":{"classes/PlanetDTO.html":{}}}],["src/planets/shared/planet.dto.ts:8",{"_index":103,"title":{},"body":{"classes/PlanetDTO.html":{}}}],["src/planets/shared/planet.service.ts",{"_index":124,"title":{},"body":{"injectables/PlanetService.html":{},"coverage.html":{}}}],["src/planets/shared/planet.service.ts:13",{"_index":143,"title":{},"body":{"injectables/PlanetService.html":{}}}],["src/planets/shared/planet.service.ts:29",{"_index":145,"title":{},"body":{"injectables/PlanetService.html":{}}}],["src/planets/shared/planet.service.ts:40",{"_index":140,"title":{},"body":{"injectables/PlanetService.html":{}}}],["src/planets/shared/planet.service.ts:45",{"_index":150,"title":{},"body":{"injectables/PlanetService.html":{}}}],["src/planets/shared/planet.service.ts:50",{"_index":142,"title":{},"body":{"injectables/PlanetService.html":{}}}],["src/planets/shared/planet.service.ts:54",{"_index":147,"title":{},"body":{"injectables/PlanetService.html":{}}}],["src/planets/shared/planet.service.ts:9",{"_index":137,"title":{},"body":{"injectables/PlanetService.html":{}}}],["src/planets/shared/planet.ts",{"_index":92,"title":{},"body":{"classes/Planet-1.html":{},"coverage.html":{}}}],["src/planets/shared/planet.ts:4",{"_index":96,"title":{},"body":{"classes/Planet-1.html":{}}}],["src/planets/shared/planet.ts:5",{"_index":95,"title":{},"body":{"classes/Planet-1.html":{}}}],["src/planets/shared/planet.ts:6",{"_index":97,"title":{},"body":{"classes/Planet-1.html":{}}}],["src/planets/swapi",{"_index":118,"title":{},"body":{"classes/PlanetResponse.html":{},"injectables/SwapiHttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":315,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":318,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":320,"title":{},"body":{"index.html":{}}}],["started",{"_index":291,"title":{"index.html":{}},"body":{}}],["starter",{"_index":307,"title":{},"body":{"index.html":{}}}],["statements",{"_index":256,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":75,"title":{},"body":{"classes/Planet.html":{},"classes/TestUtil.html":{}}}],["stay",{"_index":343,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"injectables/SwapiHttpService.html":{},"classes/TestUtil.html":{},"miscellaneous/variables.html":{}}}],["support",{"_index":334,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":354,"title":{},"body":{"modules.html":{}}}],["swapi",{"_index":152,"title":{},"body":{"injectables/PlanetService.html":{},"modules/PlanetsModule.html":{}}}],["swapihttp",{"_index":135,"title":{},"body":{"injectables/PlanetService.html":{}}}],["swapihttpservice",{"_index":136,"title":{"injectables/SwapiHttpService.html":{}},"body":{"injectables/PlanetService.html":{},"modules/PlanetsModule.html":{},"injectables/SwapiHttpService.html":{},"coverage.html":{},"overview.html":{}}}],["table",{"_index":269,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":268,"title":{},"body":{"coverage.html":{}}}],["terra",{"_index":81,"title":{},"body":{"classes/Planet.html":{},"classes/TestUtil.html":{}}}],["terrain",{"_index":65,"title":{},"body":{"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/TestUtil.html":{},"miscellaneous/variables.html":{}}}],["test",{"_index":323,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":326,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":325,"title":{},"body":{"index.html":{}}}],["testing",{"_index":272,"title":{},"body":{"dependencies.html":{}}}],["tests",{"_index":322,"title":{},"body":{"index.html":{}}}],["testutil",{"_index":74,"title":{"classes/TestUtil.html":{}},"body":{"classes/Planet.html":{},"classes/TestUtil.html":{},"coverage.html":{}}}],["thanks",{"_index":332,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.climate",{"_index":115,"title":{},"body":{"classes/PlanetDTO.html":{}}}],["this.getbyid(id",{"_index":175,"title":{},"body":{"injectables/PlanetService.html":{}}}],["this.httpservice.get(`${this.baseurl}/planets/?search=${name",{"_index":245,"title":{},"body":{"injectables/SwapiHttpService.html":{}}}],["this.id",{"_index":113,"title":{},"body":{"classes/PlanetDTO.html":{}}}],["this.name",{"_index":114,"title":{},"body":{"classes/PlanetDTO.html":{}}}],["this.planetmodel(planet",{"_index":170,"title":{},"body":{"injectables/PlanetService.html":{}}}],["this.planetmodel.deleteone",{"_index":176,"title":{},"body":{"injectables/PlanetService.html":{}}}],["this.planetmodel.find().exec",{"_index":160,"title":{},"body":{"injectables/PlanetService.html":{}}}],["this.planetmodel.findbyid(id).exec",{"_index":168,"title":{},"body":{"injectables/PlanetService.html":{}}}],["this.planetmodel.findone({name:planetname}).exec",{"_index":180,"title":{},"body":{"injectables/PlanetService.html":{}}}],["this.planetmodel.updateone({_id",{"_index":173,"title":{},"body":{"injectables/PlanetService.html":{}}}],["this.planetservice.create(planet",{"_index":211,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["this.planetservice.delete(id",{"_index":215,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["this.planetservice.getall",{"_index":207,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["this.planetservice.getbyid(id",{"_index":209,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["this.planetservice.getbyname(name",{"_index":206,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["this.planetservice.update(id",{"_index":213,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["this.swapihttp.getnumberapparitionsbyname(planetresponse.name).topromise",{"_index":165,"title":{},"body":{"injectables/PlanetService.html":{}}}],["this.terrain",{"_index":116,"title":{},"body":{"classes/PlanetDTO.html":{}}}],["touch",{"_index":344,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":350,"title":{},"body":{"index.html":{}}}],["type",{"_index":66,"title":{},"body":{"classes/Planet.html":{},"classes/Planet-1.html":{},"classes/PlanetDTO.html":{},"classes/PlanetResponse.html":{},"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{},"injectables/SwapiHttpService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typescript",{"_index":306,"title":{},"body":{"index.html":{}}}],["unit",{"_index":321,"title":{},"body":{"index.html":{}}}],["update",{"_index":131,"title":{},"body":{"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{}}}],["update(@param('id",{"_index":212,"title":{},"body":{"controllers/PlanetsController.html":{}}}],["update(id",{"_index":149,"title":{},"body":{"injectables/PlanetService.html":{},"controllers/PlanetsController.html":{}}}],["value",{"_index":234,"title":{},"body":{"injectables/SwapiHttpService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":265,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":360,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":112,"title":{},"body":{"classes/PlanetDTO.html":{}}}],["watch",{"_index":316,"title":{},"body":{"index.html":{}}}],["website",{"_index":348,"title":{},"body":{"index.html":{}}}],["world",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":337,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/PlanetsModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nPlanetsModule\n\nPlanetsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPlanetsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PlanetsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\n\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { PlanetsModule } from './planets/planets.module';\n\n\n@Module({\n  imports: [\n    MongooseModule.forRoot('mongodb://root:root@localhost:27017'),\n    PlanetsModule\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Planet.html":{"url":"classes/Planet.html","title":"class - Planet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Planet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/test/TestUtil.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                climate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                terrain\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            climate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/test/TestUtil.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/test/TestUtil.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/test/TestUtil.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            terrain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/common/test/TestUtil.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PlanetDTO } from \"../../planets/shared/planet.dto\";\n\nclass Planet {\n    id: string\n    name: String;\n    climate: String;\n    terrain: String;    \n}\n\nexport default class TestUtil {\n    static giveMeAValidPlanet(): Planet {\n        const planet = new Planet();\n        planet.id = \"an id\"\n        planet.name = \"terra\"\n        planet.climate = \"fire\"   \n        planet.terrain = \"rock\"\n        return planet\n    }\n\n    static giveMeAValidPlanetDTO(): PlanetDTO {\n        const planetDTO = new PlanetDTO()\n        planetDTO.id = 'an id'\n        planetDTO.name = 'terra'\n        planetDTO.climate = 'fire'\n        planetDTO.terrain = 'rock'      \n        return planetDTO\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Planet-1.html":{"url":"classes/Planet-1.html","title":"class - Planet-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Planet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/planets/shared/planet.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                climate\n                            \n                            \n                                name\n                            \n                            \n                                terrain\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            climate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/planets/shared/planet.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/planets/shared/planet.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            terrain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/planets/shared/planet.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Document } from 'mongoose'\n\nexport class Planet extends Document{\n    name: String;\n    climate: String;\n    terrain: String;    \n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlanetDTO.html":{"url":"classes/PlanetDTO.html","title":"class - PlanetDTO","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlanetDTO\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/planets/shared/planet.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                aparitions\n                            \n                            \n                                climate\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                terrain\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            aparitions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/planets/shared/planet.dto.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            climate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/planets/shared/planet.dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/planets/shared/planet.dto.ts:4\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/planets/shared/planet.dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            terrain\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         String\n\n                        \n                    \n                        \n                            \n                                    Defined in src/planets/shared/planet.dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            init\n                        \n                        \n                    \n                \n            \n            \n                \ninit(planet: Planet)\n                \n            \n\n\n            \n                \n                    Defined in src/planets/shared/planet.dto.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    planet\n                                    \n                                                Planet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Planet } from \"./planet\";\n\nexport class PlanetDTO {\n    id: string\n    name: String;\n    climate: String;\n    terrain: String;\n    aparitions: number;\n\n    init(planet: Planet){\n        this.id = planet.id\n        this.name = planet.name\n        this.climate = planet.climate\n        this.terrain = planet.terrain        \n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PlanetResponse.html":{"url":"classes/PlanetResponse.html","title":"class - PlanetResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PlanetResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/planets/swapi-http/planet.response.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                films\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            films\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in src/planets/swapi-http/planet.response.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PlanetResponse{      \n    films: Array;    \n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlanetService.html":{"url":"injectables/PlanetService.html","title":"injectable - PlanetService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PlanetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/planets/shared/planet.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getByName\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(planetModel: Model, swapiHttp: SwapiHttpService)\n                    \n                \n                        \n                            \n                                Defined in src/planets/shared/planet.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        planetModel\n                                                  \n                                                        \n                                                                    Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        swapiHttp\n                                                  \n                                                        \n                                                                        SwapiHttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(planet: Planet)\n                \n            \n\n\n            \n                \n                    Defined in src/planets/shared/planet.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    planet\n                                    \n                                                Planet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/planets/shared/planet.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n\n            \n                \n                    Defined in src/planets/shared/planet.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/planets/shared/planet.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByName(planetName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/planets/shared/planet.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    planetName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, planet: Planet)\n                \n            \n\n\n            \n                \n                    Defined in src/planets/shared/planet.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    planet\n                                    \n                                                Planet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common'\nimport { Planet } from './planet'\nimport { InjectModel } from '@nestjs/mongoose'\nimport { Model } from 'mongoose'\nimport { SwapiHttpService } from './../swapi-http/swapi-http.service';\nimport { PlanetDTO } from './planet.dto';\n\n@Injectable()\nexport class PlanetService {\n\n    constructor(@InjectModel('Planet') private readonly planetModel: Model, private swapiHttp: SwapiHttpService){}\n\n    async getAll() {\n        const planets = await this.planetModel.find().exec()\n        \n        const planetsDTO = planets.map(async planet => {\n            let planetResponse: PlanetDTO = new PlanetDTO()\n            planetResponse.init(planet)            \n            planetResponse.aparitions = await this.swapiHttp.getNumberApparitionsByName(planetResponse.name).toPromise();            \n            return planetResponse\n        });\n\n        return (async () => {\n            const allResult = Promise.all(planetsDTO)                  \n            return allResult\n        })();                \n    }\n\n    async getById(id: string) {        \n        \n        const planet = await this.planetModel.findById(id).exec()        \n        const planetResponse = new PlanetDTO()\n        \n        planetResponse.init(planet)\n        planetResponse.aparitions = await this.swapiHttp.getNumberApparitionsByName(planetResponse.name).toPromise();        \n        \n        return planetResponse\n     }\n\n    async create(planet: Planet) {\n        const createdPlanet = new this.planetModel(planet)\n        return await createdPlanet.save()\n     }\n\n    async update(id: string, planet:Planet) {\n        await this.planetModel.updateOne({_id: id}, planet).exec()\n        return this.getById(id)\n     }\n\n    async delete(id: string) {\n        return await this.planetModel.deleteOne({ _id: id }).exec()\n    }\n\n    async getByName(planetName:string) {                \n        const planet =await this.planetModel.findOne({name:planetName}).exec()        \n        const planetResponse = new PlanetDTO()\n        \n        planetResponse.init(planet)\n        planetResponse.aparitions = await this.swapiHttp.getNumberApparitionsByName(planetResponse.name).toPromise();        \n        \n        return planetResponse\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PlanetsController.html":{"url":"controllers/PlanetsController.html","title":"controller - PlanetsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PlanetsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/planets/planets.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                planets\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                    Async\n                                getById\n                            \n                            \n                                    Async\n                                getByName\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(planet: Planet)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/planets/planets.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    planet\n                                    \n                                                Planet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/planets/planets.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/planets/planets.controller.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/planets/planets.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getByName(name: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/name/:search')\n                \n            \n\n            \n                \n                    Defined in src/planets/planets.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            update\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, planet: Planet)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')\n                \n            \n\n            \n                \n                    Defined in src/planets/planets.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    planet\n                                    \n                                                Planet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Delete, Get, Param, Put, Post } from '@nestjs/common';\nimport { PlanetService } from './shared/planet.service';\nimport { Planet } from './shared/planet';\nimport { PlanetDTO } from './shared/planet.dto';\n\n@Controller('planets')\nexport class PlanetsController {\n\n    constructor(private planetService: PlanetService) {\n\n    }\n\n    @Get('/name/:search')\n    async getByName(@Param('search') name:string) {\n        return this.planetService.getByName(name)\n    }\n\n    @Get() \n    async getAll() : Promise {\n        return this.planetService.getAll()\n    }\n\n    @Get(':id') \n    async getById(@Param('id') id: string) : Promise {\n        return this.planetService.getById(id)\n    }\n\n    @Post() \n    async create(@Body() planet: Planet) : Promise {\n        return this.planetService.create(planet)\n    }\n\n    @Put(':id')\n    async update(@Param('id') id: string, @Body() planet:Planet): Promise {\n        return this.planetService.update(id, planet)\n    }\n\n    @Delete(':id')\n    async delete(@Param('id') id: string) {\n        await this.planetService.delete(id)\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlanetsModule.html":{"url":"modules/PlanetsModule.html","title":"module - PlanetsModule","body":"\n                   \n\n\n\n\n    Modules\n    PlanetsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlanetsModule\n\n\n\ncluster_PlanetsModule_providers\n\n\n\n\nPlanetService\n\nPlanetService\n\n\n\nPlanetsModule\n\nPlanetsModule\n\nPlanetsModule -->\n\nPlanetService->PlanetsModule\n\n\n\n\n\nSwapiHttpService\n\nSwapiHttpService\n\nPlanetsModule -->\n\nSwapiHttpService->PlanetsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/planets/planets.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PlanetService\n                        \n                        \n                            SwapiHttpService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PlanetsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule, Module } from '@nestjs/common';\nimport { PlanetsController } from './planets.controller';\nimport { PlanetService } from './shared/planet.service';\nimport { PlanetSchema} from './schemas/planet.schema'\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { SwapiHttpService } from './swapi-http/swapi-http.service'\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([{name: 'Planet', schema: PlanetSchema}]),\n        HttpModule        \n    ],\n    controllers: [PlanetsController],\n    providers: [\n        PlanetService,\n        SwapiHttpService\n    ]\n})\nexport class PlanetsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SwapiHttpService.html":{"url":"injectables/SwapiHttpService.html","title":"injectable - SwapiHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SwapiHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/planets/swapi-http/swapi-http.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                baseUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getNumberApparitionsByName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in src/planets/swapi-http/swapi-http.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getNumberApparitionsByName\n                        \n                        \n                    \n                \n            \n            \n                \ngetNumberApparitionsByName(name: String)\n                \n            \n\n\n            \n                \n                    Defined in src/planets/swapi-http/swapi-http.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                String\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            baseUrl\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : `https://swapi.dev/api`\n                        \n                    \n                        \n                            \n                                    Defined in src/planets/swapi-http/swapi-http.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpService, Injectable} from '@nestjs/common';\nimport { Observable } from 'rxjs/internal/Observable';\nimport {map} from \"rxjs/operators\";\nimport { PlanetResponse } from './planet.response';\n\nconst FIRST_RESULT = 0\nconst EMPTY = 0\n\n@Injectable()\nexport class SwapiHttpService {\n\n    baseUrl = `https://swapi.dev/api`;\n\n    constructor(private readonly httpService:HttpService) { }\n    \n    getNumberApparitionsByName(name:String): Observable {        \n        return this.httpService.get(`${this.baseUrl}/planets/?search=${name}`)\n            .pipe(\n                map((response:any) => {                    \n                    const planet:PlanetResponse = response.data.results[FIRST_RESULT]\n                    return planet ? planet.films.length : EMPTY\n                })\n            )\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TestUtil.html":{"url":"classes/TestUtil.html","title":"class - TestUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TestUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/test/TestUtil.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                giveMeAValidPlanet\n                            \n                            \n                                    Static\n                                giveMeAValidPlanetDTO\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            giveMeAValidPlanet\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    giveMeAValidPlanet()\n                \n            \n\n\n            \n                \n                    Defined in src/common/test/TestUtil.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Planet\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            giveMeAValidPlanetDTO\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    giveMeAValidPlanetDTO()\n                \n            \n\n\n            \n                \n                    Defined in src/common/test/TestUtil.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PlanetDTO\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { PlanetDTO } from \"../../planets/shared/planet.dto\";\n\nclass Planet {\n    id: string\n    name: String;\n    climate: String;\n    terrain: String;    \n}\n\nexport default class TestUtil {\n    static giveMeAValidPlanet(): Planet {\n        const planet = new Planet();\n        planet.id = \"an id\"\n        planet.name = \"terra\"\n        planet.climate = \"fire\"   \n        planet.terrain = \"rock\"\n        return planet\n    }\n\n    static giveMeAValidPlanetDTO(): PlanetDTO {\n        const planetDTO = new PlanetDTO()\n        planetDTO.id = 'an id'\n        planetDTO.name = 'terra'\n        planetDTO.climate = 'fire'\n        planetDTO.terrain = 'rock'      \n        return planetDTO\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/test/TestUtil.ts\n            \n            class\n            Planet\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/test/TestUtil.ts\n            \n            class\n            TestUtil\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/planets/planets.controller.ts\n            \n            controller\n            PlanetsController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/planets/schemas/planet.schema.ts\n            \n            variable\n            PlanetSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/planets/shared/planet.dto.ts\n            \n            class\n            PlanetDTO\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/planets/shared/planet.service.ts\n            \n            injectable\n            PlanetService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/planets/shared/planet.ts\n            \n            class\n            Planet\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/planets/swapi-http/planet.response.ts\n            \n            class\n            PlanetResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/planets/swapi-http/swapi-http.service.ts\n            \n            injectable\n            SwapiHttpService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/planets/swapi-http/swapi-http.service.ts\n            \n            variable\n            EMPTY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/planets/swapi-http/swapi-http.service.ts\n            \n            variable\n            FIRST_RESULT\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @golevelup/nestjs-testing : ^0.1.2\n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            mongoose : ^5.10.6\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlanetsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_PlanetsModule\n\n\n\ncluster_PlanetsModule_providers\n\n\n\n\nPlanetsModule\n\nPlanetsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPlanetsModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPlanetService\n\nPlanetService\n\nPlanetsModule -->\n\nPlanetService->PlanetsModule\n\n\n\n\n\nSwapiHttpService\n\nSwapiHttpService\n\nPlanetsModule -->\n\nSwapiHttpService->PlanetsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EMPTY   (src/.../swapi-http.service.ts)\n                        \n                        \n                            FIRST_RESULT   (src/.../swapi-http.service.ts)\n                        \n                        \n                            PlanetSchema   (src/.../planet.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/planets/swapi-http/swapi-http.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            EMPTY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FIRST_RESULT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n\n\n            \n        \n\n    src/planets/schemas/planet.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PlanetSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({    \n    name: String,\n    climate: String,\n    terrain: String,\n    aparitions: Number\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
